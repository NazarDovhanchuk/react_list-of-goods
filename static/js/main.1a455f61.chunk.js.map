{"version":3,"sources":["GoodList.js","App.js","index.js"],"names":["GoodList","goodsList","reverse","sortByAlphabet","sortByLength","reset","type","onClick","map","item","goodsFromServer","App","state","isStarted","startHandler","setState","resetHandler","reverseHandler","prevState","sort","a","b","localeCompare","length","this","className","React","Component","ReactDOM","render","document","getElementById"],"mappings":"oOAoDeA,G,MAjDE,SAAC,GAAD,IACbC,EADa,EACbA,UAAWC,EADE,EACFA,QAASC,EADP,EACOA,eAAgBC,EADvB,EACuBA,aAAcC,EADrC,EACqCA,MADrC,OAGf,6BACE,4BACEC,KAAK,SACLC,QAASL,GAFX,WAMA,4BACEI,KAAK,SACLC,QAASJ,GAFX,oBAMA,4BACEG,KAAK,SACLC,QAASH,GAFX,kBAMA,4BACEE,KAAK,SACLC,QAASF,GAFX,SAMA,4BACGJ,EAAUO,KAAI,SAAAC,GAAI,OACjB,4BACGA,UC7BLC,EAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAsEaC,E,4MAlEbC,MAAQ,CACNC,WAAW,EACXZ,UAAWS,G,EAGbI,aAAe,WACb,EAAKC,SAAS,CACZF,WAAW,K,EAIfG,aAAe,WACb,EAAKD,SAAS,CACZd,UAAWS,K,EAIfO,eAAiB,WACf,EAAKF,UAAS,SAAAG,GAAS,MAAK,CAC1BjB,UAAW,YAAIiB,EAAUjB,WAAWC,e,EAIxCC,eAAiB,WACf,EAAKY,UAAS,SAAAG,GAAS,MAAK,CAC1BjB,UAAW,YAAIiB,EAAUjB,WAAWkB,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,W,EAIvEjB,aAAe,WACb,EAAKW,UAAS,SAAAG,GAAS,MAAK,CAC1BjB,UAAW,YAAIiB,EAAUjB,WAAWkB,MAClC,SAACC,EAAGC,GAAJ,OAAWD,EAAEG,OAASF,EAAEE,OAAS,GAAK,U,uDAKlC,IAAD,EAC0BC,KAAKZ,MAA9BC,EADD,EACCA,UAAWZ,EADZ,EACYA,UAEnB,OACE,yBAAKwB,UAAU,OACb,sCACEZ,GACA,4BACEP,KAAK,SACLC,QAASiB,KAAKV,cAFhB,SAQDD,GACC,kBAAC,EAAD,CACEZ,UAAWA,EACXC,QAASsB,KAAKP,eACdd,eAAgBqB,KAAKrB,eACrBC,aAAcoB,KAAKpB,aACnBC,MAAOmB,KAAKR,oB,GA3DNU,IAAMC,WCdxBC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.1a455f61.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst GoodList = (\n  { goodsList, reverse, sortByAlphabet, sortByLength, reset },\n) => (\n  <div>\n    <button\n      type=\"button\"\n      onClick={reverse}\n    >\n      Reverse\n    </button>\n    <button\n      type=\"button\"\n      onClick={sortByAlphabet}\n    >\n      Sort By Alphabet\n    </button>\n    <button\n      type=\"button\"\n      onClick={sortByLength}\n    >\n      Sort By Length\n    </button>\n    <button\n      type=\"button\"\n      onClick={reset}\n    >\n      Reset\n    </button>\n    <ul>\n      {goodsList.map(item => (\n        <li>\n          {item}\n        </li>\n      ))}\n    </ul>\n\n  </div>\n);\n\nGoodList.propTypes = {\n  goodsList: PropTypes.arrayOf(\n    PropTypes.string.isRequired,\n  ).isRequired,\n  reverse: PropTypes.func.isRequired,\n  sortByAlphabet: PropTypes.func.isRequired,\n  sortByLength: PropTypes.func.isRequired,\n  reset: PropTypes.func.isRequired,\n};\n\nexport default GoodList;\n","import React from 'react';\nimport './App.css';\n\nimport GoodList from './GoodList';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nclass App extends React.Component {\n  state = {\n    isStarted: false,\n    goodsList: goodsFromServer,\n  }\n\n  startHandler = () => {\n    this.setState({\n      isStarted: true,\n    });\n  }\n\n  resetHandler = () => {\n    this.setState({\n      goodsList: goodsFromServer,\n    });\n  }\n\n  reverseHandler = () => {\n    this.setState(prevState => ({\n      goodsList: [...prevState.goodsList].reverse(),\n    }));\n  }\n\n  sortByAlphabet = () => {\n    this.setState(prevState => ({\n      goodsList: [...prevState.goodsList].sort((a, b) => a.localeCompare(b)),\n    }));\n  }\n\n  sortByLength = () => {\n    this.setState(prevState => ({\n      goodsList: [...prevState.goodsList].sort(\n        (a, b) => (a.length > b.length ? 1 : -1),\n      ),\n    }));\n  }\n\n  render() {\n    const { isStarted, goodsList } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>Goods</h1>\n        {!isStarted && (\n          <button\n            type=\"button\"\n            onClick={this.startHandler}\n          >\n            Start\n          </button>\n        )}\n\n        {isStarted && (\n          <GoodList\n            goodsList={goodsList}\n            reverse={this.reverseHandler}\n            sortByAlphabet={this.sortByAlphabet}\n            sortByLength={this.sortByLength}\n            reset={this.resetHandler}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}